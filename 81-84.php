<p>
	задача 81
</p>
<?php
//81 -----------------------------------------------------------------
// Создать прямоугольную матрицу A, имеющую N строк и M
// столбцов со случайными элементами. Все элементы имеют
// целый тип. Дано целое число H. Определить, какие столбцы
// имеют хотя бы одно такое число, а какие не имеют.
function print_matrix($matrix, $M, $N): void //Чтобы красиво печатало
{ //дальше используется эта функция
    for ($i = 0; $i < $M; $i++)
    {
        for ($j = 0; $j < $N; $j++)
        {
            echo $matrix[$i][$j]."\t";
        }
        echo "<p></p>";
    }
}
$m=5;
$n=3;//строки
$h=25;
$f=0;
$matrix=[];
for ($i = 0; $i < $n; $i++) 
{
	for ($j = 0; $j < $m; $j++) 
	{
    	$matrix[$i][$j] = rand(10, 26);
	}	
}
print_matrix($matrix, $n, $m);

for ($i = 0; $i < $m; $i++) 
{
	for ($j = 0; $j < $n; $j++) 
	{
		if ($h == $matrix[$j][$i]) 
	 	{
			echo "<p></p>"."В столбце ". $i . " есть минимум 1 элемент со значением " . $h . "<p></p>";
			$f=1;
			break;
		}
	}
	if ($f == 0)
		echo "В столбце ". $i . " нет элемента со значением " . $h . "<p></p>";
	$f=0;
}

?>
<hr>
<p>
	задача 82
</p>
<?php
//82 -----------------------------------------------------------------
// Создать прямоугольную матрицу A, имеющую N строк и M
// столбцов со случайными элементами. Исключить из матрицы
// строку с номером L. Сомкнуть строки матрицы.
$m=6;
$n=4;
$l=2;
for ($i = 0; $i < $n; $i++) 
{
	for ($j = 0; $j < $m; $j++) 
	{
    	$matrix[$i][$j] = rand(10, 30);
	}
}
echo "<p></p>"."Старая матрица:"."<p></p>"."Удаляем строку с индексом № ".$l."<p></p>";
print_matrix($matrix, $n, $m);

function delete_row_from_matrix($matrix, $row_index)
{
    if (is_array($matrix) && array_key_exists($row_index, $matrix))
    {
        unset($matrix[$row_index]);
        $matrix = array_values($matrix);
    }
    return $matrix;
}

$matrix = delete_row_from_matrix($matrix,$l);
echo "<p></p>"."Новая матрица:"."<p></p>";
print_matrix($matrix, $n-1, $m);

?>
<hr>
<p>
	задача 83
</p>
<?php
//83 -----------------------------------------------------------------
// Создать прямоугольную матрицу A, имеющую N строк и M
// столбцов со случайными элементами. Добавить к матрице
// строку и вставить ее под номером L.
$m=6;
$n=4;
$l=2;

for ($i = 0; $i < $n; $i++) 
{
	for ($j = 0; $j < $m; $j++) 
	{
    	$matrix[$i][$j] = rand(10, 30);
	}
}
echo "<p></p>"."Старая матрица:"."<p></p>"."Добавляем строку с индексом № ".$l."<p></p>";
print_matrix($matrix, $n, $m);
$new_matrix = [];
//Прилепили то, что стояло до l
for ($i = 0; $i < $l; $i++) 
{
    for ($j = 0; $j < $m; $j++) 
	{
        $new_matrix[$i][$j] = $matrix[$i][$j];
    }
}
//Прилепили новую строку
for ($j = 0; $j < $m; $j++) 
{
    $new_matrix[$l][$j] = rand(10, 30);
}
//Прилепили кусок после l
for ($i = $l ; $i < $n; $i++) 
{
    for ($j = 0; $j < $m; $j++) 
	{
        $new_matrix[($i+1)][$j] = $matrix[$i][$j];
    }
}

echo "<p></p>"."Новая матрица:"."<p></p>";
print_matrix($new_matrix, ($n+1), $m);
?>

<hr>
<p>
	задача 84
</p>
<?php
//84 -----------------------------------------------------------------
// Создать прямоугольную матрицу A, имеющую N строк и M
// столбцов со случайными элементами. Найти сумму
// элементов, стоящих на главной диагонали, и сумму
// элементов, стоящих на побочной диагонали (элементы
// главной диагонали имеют индексы от [0,0] до [N,N], а
// элементы побочной диагонали – от [N,0] до [0,N]).

$m=3;
$n=3;
$l=2;
$matrix;
function set_matrix_random($matrix,$M, $N)
{//лучше поздно, чем никогда
    for ($i = 0; $i < $M; $i++) 
    {
        for ($j = 0; $j < $N; $j++) 
        {
            $matrix[$i][$j] = rand(10, 30);
        }
    }
    return $matrix;
}
$matrix = set_matrix_random($matrix,$n, $m);

$sum_of_key_diagonal = 0;
$sum_of_secondary_diagonal = 0;
echo "<p></p>"."Матрица:"."<p></p>";
print_matrix($matrix, $n, $m);

for ($i = 0; $i < $n; $i++) 
{
    for ($j = 0; $j < $m; $j++) 
    {
        if ($i == $j)
        {
            $sum_of_key_diagonal += $matrix[$i][$j];
        }
        if ($j == ($m - 1 - $i))
        {
            $sum_of_secondary_diagonal += $matrix[$i][$j];
        }
    }
}
echo "Сумма для главной диагонали: ".$sum_of_key_diagonal."<p></p>";
echo "Сумма для побочной диагонали: ".$sum_of_secondary_diagonal."<p></p>";
?>
<hr>
<p>
	задача 85
</p>
