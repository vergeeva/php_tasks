<p>
	Задание 67
</p>
<?php
//67 -----------------------------------------------------------------
// Создать прямоугольную матрицу A, имеющую N строк и M
// столбцов со случайными элементами. Найти наибольший
// элемент столбца матрицы A, для которого сумма абсолютных
// значений элементов максимальна.
$m=3;
$n=5;
$count=0;
$matrix= [];
$sum = [];

for ($j = 0; $j < $n; $j++) //заполняем по столбцам
{
    $sum[$j] = 0;
    for ($i = 0; $i < $m; $i++)
    {
        $matrix[$i][$j] = rand(-20, 20);
        $sum[$j] += (abs($matrix[$i][$j])); //попутно считаем сумму
    }
}
function print_matrix($matrix, $M, $N) //Чтобы красиво печатало
{ //дальше используется эта функция
    for ($i = 0; $i < $M; $i++)
    {
        for ($j = 0; $j < $N; $j++)
        {
            echo $matrix[$i][$j]."\t";
        }
        echo "<p></p>";
    }
}
echo "заполненная матрица:"."<p></p>";
print_matrix($matrix, $m, $n);

$max_sum = $sum[0];
for ($i = 0; $i < $n; $i++) 
{//Поиск индекса макс. суммы
  if ($sum[$i] > $max_sum)
  {
  	 $max_sum = $sum[$i];
 	 $count = $i;
  }
}

$max_value = -1000000;
//поиск макс. значения в столбце j
for ($i = 0; $i < $m; $i++) 
{
    if ($matrix[$i][$count] >= $max_value) 
    {
        $max_value = $matrix[$i][$count];
    }
}
echo "Столбец:".($count+1)."<p></p>"; //чтобы номер как при счете с 1-ого
echo "Его сумма:".$max_sum."<p></p>";
echo "Максимальное значение в столбце:".$max_value."<p></p>";
echo "Все суммы:"."<p></p>";
print_r($sum);
?> 
<hr>
<p>
	Задание 68
</p>
<?php
//68 -----------------------------------------------------------------
// Создать прямоугольную матрицу A, имеющую N строк и M
// столбцов со случайными элементами. Найти наибольшее
// значение среди средних значений для каждой строки
// матрицы
$m=3;
$n=5;
$matrix;
$average = array();

for ($i = 0; $i < $m; $i++) //заполняем по столбцам
{
    for ($j = 0; $j < $n; $j++) 
    {
        $matrix[$i][$j] = rand(10, 30);
    }
    $average[$i] = (array_sum($matrix[$i]))/$n;
}
print_matrix($matrix, $m, $n);
echo "Средние значения по строкам:"."<p></p>";
print_r($average);
echo "<p></p>Максимальное значение = ".(max($average));
?>

<hr>
<p>
	Задание 69
</p>
<?php
//69 -----------------------------------------------------------------
// Создать прямоугольную матрицу A, имеющую N строк и M
// столбцов со случайными элементами. Найти наименьший
// элемент столбца матрицы A, для которого сумма абсолютных
// значений элементов максимальна.
$m=3;
$n=5;
$count=0;
$matrix = [];
$sum = array();

for ($j = 0; $j < $n; $j++) //заполняем по столбцам
{
    $sum[$j] = 0;
    for ($i = 0; $i < $m; $i++) 
    {
        $matrix[$i][$j] = rand(-20, 20);
        $sum[$j] += (abs($matrix[$i][$j])); //попутно считаем сумму
    }
}

print_matrix($matrix, $m, $n);

$max_sum = $sum[0];
for ($i = 0; $i < $n; $i++) 
{//Поиск индекса макс. суммы
  if ($sum[$i] > $max_sum)
  {
  	 $max_sum = $sum[$i];
 	 $count = $i;
  }
}

$min_value = 1000000;
//поиск макс. значения в столбце j
for ($i = 0; $i < $m; $i++) 
{
    if ($matrix[$i][$count] <= $min_value) 
    {
        $min_value = $matrix[$i][$count];
    }
}
echo "Столбец:".($count+1)."<p></p>"; //чтобы номер как при счете с 1-ого
echo "Его сумма:".$max_sum."<p></p>";
echo "Минимальное  значение в столбце:".$min_value."<p></p>";
echo "Все суммы:"."<p></p>";
print_r($sum);
?>

<hr>
<p>
	Задание 70
</p>

<?php
//70 -----------------------------------------------------------------
// Создать прямоугольную матрицу A, имеющую N строк и M
// столбцов со случайными элементами. Найти наименьшее
// значение среди средних значений для каждой строки
// матрицы
$m=3;
$n=5;
$matrix = [];
$average = array();

for ($i = 0; $i < $m; $i++) //заполняем по столбцам
{
    for ($j = 0; $j < $n; $j++) 
    {
        $matrix[$i][$j] = rand(10, 30);
    }
    $average[$i] = (array_sum($matrix[$i]))/$n;
}
print_matrix($matrix, $m, $n);
echo "Средние значения по строкам:"."\n";
print_r($average);
echo "Минимальное значение = ".(min($average));
?>

<hr>
<p>
	Задание 71
</p>
<?php
//71 -----------------------------------------------------------------
// Создать прямоугольную матрицу A, имеющую N строк и M
// столбцов со случайными элементами. Определить средние
// значения по всем строкам и столбцам матрицы. Результат
// оформить в виде матрицы из N + 1 строк и M + 1 столбцов.
$m=3;
$n=5;
$matrix = [];
$average_row = array(); //По строкам

for ($i = 0; $i < $m; $i++) //заполняем по строкам
{
    for ($j = 0; $j < $n; $j++) 
    {
        $matrix[$i][$j] = rand(10, 30);
    }
    $average_row[$i] = (array_sum($matrix[$i]))/$n;
}

$average_column = array(); //по столбцам

for ($j = 0; $j < $n; $j++) //заполняем по столбцам 
{
    $sum_column = 0;
    for ($i = 0; $i < $m; $i++) 
    {
        $sum_column += $matrix[$i][$j];
    }
    $average_column[$j] = $sum_column/$n;
}

for ($i = 0; $i < $m; $i++) //добавим столбец
{
    $matrix[$i][$n] = $average_row[$i];
}

for ($j = 0; $j < $n; $j++) //добавим строку
{
    $matrix[$m][$j] = $average_column[$j];
}
$matrix[$m][$n] = ' ';//заполним пустую дыру пустотой
echo "старая матрица:"."<p></p>";
print_matrix($matrix, $m, $n);
echo "Средние значения:"."<p></p>";
print_r($average_row);
echo "<p></p>";
print_r($average_column);
echo "<p></p>"."новая матрица:"."<p></p>";
print_matrix($matrix, ($m + 1), ($n + 1));

?>
<hr>
<p>
	Задание 72
</p>

<?php
//72 -----------------------------------------------------------------
// Создать прямоугольную матрицу A, имеющую N строк и M
// столбцов со случайными элементами. Найти сумму элементов
// всей матрицы. Определить, какую долю в этой сумме
// составляет сумма элементов каждого столбца. Результат
// оформить в виде матрицы из N + 1 строк и M столбцов.
$m=4;
$n=6;
$matrix;
$sum_of_all_el = 0;
//заполняем рандомом
for ($i = 0; $i < $m; $i++)
{
    for ($j = 0; $j < $n; $j++) 
    {
        $matrix[$i][$j] = rand(10, 25);
        $sum_of_all_el += $matrix[$i][$j];
    }
    //считаем сумму общую
}
$columns_sum = array();
//считаем сумму по столбцам
for ($j = 0; $j < $n; $j++) 
{
    $sum_column = 0;
    for ($i = 0; $i < $m; $i++) 
    {
        $sum_column += $matrix[$i][$j];
    }
    $columns_sum[$j] = $sum_column;
}
//считаем процент от общего + добавляем в матрицу
for ($j = 0; $j < $n; $j++) //добавим строку
{
    $matrix[$m][$j] = round(($columns_sum[$j]/$sum_of_all_el)*100,2);
}
print_matrix($matrix, ($m + 1), $n);
print_r($columns_sum);
echo "<p></p>"."Общая сумма: ".$sum_of_all_el;
?>
<hr>
<p>
	Задание 73
</p>

<?php
//73 -----------------------------------------------------------------
// Создать прямоугольную матрицу A, имеющую N строк и M
// столбцов со случайными элементами. Найти сумму элементов
// всей матрицы. Определить, какую долю в этой сумме
// составляет сумма элементов каждой строки. Результат
// оформить в виде матрицы из N строк и M+1 столбцов
$m=4;
$n=6;
$matrix;
$sum_of_all_el = 0;
//заполняем рандомом
for ($i = 0; $i < $m; $i++)
{
    for ($j = 0; $j < $n; $j++) 
    {
        $matrix[$i][$j] = rand(10, 25);
        $sum_of_all_el += $matrix[$i][$j];
    }
    //считаем сумму общую
}
$rows_sum = array();
//считаем сумму по строкам
for ($i = 0; $i < $m; $i++) 
{
    $sum_row = 0;
    for ($j = 0; $j < $n; $j++) 
    {
        $sum_row += $matrix[$i][$j];
    }
    $rows_sum[$i] = $sum_row;
}
//считаем процент от общего + добавляем в матрицу
for ($i = 0; $i < $m; $i++) //добавим столбец
{
    $matrix[$i][$n] = round(($rows_sum[$i]/$sum_of_all_el)*100,2);
}
print_matrix($matrix, $m, ($n+1));
print_r($rows_sum);
echo "<p></p>"."Общая сумма: ".$sum_of_all_el;
?>
<hr>
<p>
	Задание 74
</p>
<?php
//74 -----------------------------------------------------------------
// Создать прямоугольную матрицу A, имеющую N строк и M
// столбцов со случайными элементами. Определить, сколько
// отрицательных элементов содержится в каждом столбце и в
// каждой строке матрицы. Результат оформить в виде матрицы
// из N + 1 строк и M + 1 столбцов
$m=3;
$n=5;
$matrix;
$negative_row = array(); 

for ($i = 0; $i < $m; $i++) //заполняем по строкам
{
    $negative_row[$i] = 0;
    for ($j = 0; $j < $n; $j++) 
    {
        $matrix[$i][$j] = rand(-20, 20);
        if ($matrix[$i][$j] < 0) $negative_row[$i]++;
    }
}

$negative_column = array();  //по столбцам
for ($j = 0; $j < $n; $j++) //заполняем по столбцам 
{
    $negative_column[$j] = 0;
    for ($i = 0; $i < $m; $i++) 
    {
        if ($matrix[$i][$j] < 0) $negative_column[$j]++;
    }
}

for ($i = 0; $i < $m; $i++) //добавим столбец
{
    $matrix[$i][$n] = $negative_row[$i];
}

for ($j = 0; $j < $n; $j++) //добавим строку
{
    $matrix[$m][$j] = $negative_column[$j];
}
$matrix[$m][$n] = '×';//заполним пустую дыру пустотой
echo "<p></p>"."старая матрица:"."<p></p>";
print_matrix($matrix, $m, $n);
echo "<p></p>"."новая матрица:"."<p></p>";
print_matrix($matrix, ($m + 1), ($n + 1));
?>
<hr>
<p>
	Задание 75
</p>
<?php
//75 -----------------------------------------------------------------
// Создать прямоугольную матрицу A, имеющую N строк и M
// столбцов со случайными элементами. Определить, сколько
// нулевых элементов содержится в верхних L строках матрицы
// и в левых К столбцах матрицы.
$m=3;
$n=5;
$L = rand(1, $m); //строки до L
$K = rand(1, $n); //столбцы до K
$matrix;
$nulls_in_rows = 0; 

for ($i = 0; $i < $m; $i++) //заполняем по строкам
{
    for ($j = 0; $j < $n; $j++) 
    {
        $matrix[$i][$j] = rand(0, 20);
    }
}
for ($i = 0; $i < $L; $i++) //ищем по строкам до L
{
    for ($j = 0; $j < $n; $j++) 
    {
        if ($matrix[$i][$j] == 0) 
        {
            $nulls_in_rows++;
        }
    }
}

$nulls_in_column = 0;  //по столбцам
for ($j = 0; $j < $K; $j++) //Ищем по столбцам до K
{
    for ($i = 0; $i < $m; $i++) 
    {
        if ($matrix[$i][$j] == 0) 
        {
            $nulls_in_column++;
        }
    }
}

echo "матрица:"."<p></p>";
print_matrix($matrix, $m, $n);
echo "нулей в строках до ".$L.": ".$nulls_in_rows."<p></p>";
echo "нулей в столбцах до ".$K.": ".$nulls_in_column."\n";

?>
<hr>
<p>
	Задание 76
</p>
<?php
//76 -----------------------------------------------------------------
// Создать прямоугольную матрицу A, имеющую N строк и M
// столбцов со случайными элементами. Перемножить элементы
// каждого столбца матрицы с соответствующими элементами K-го столбца.

$m=3;
$n=5;
$K = rand(1, 5); //умножать на него
$matrix;
echo "K = ".$K."; Старая матрица:"."<p></p>";
for ($i = 0; $i < $m; $i++) 
{
    for ($j = 0; $j < $n; $j++) 
    {
        $matrix[$i][$j] = rand(0, 20);
        echo $matrix[$i][$j]."\t";
        $matrix[$i][$j] *= $K;
    }
    echo "<p></p>";
}

echo "<p></p>"."Новая матрица:"."<p></p>";
print_matrix($matrix, $m, $n);
?>

<hr>
<p>
	Задание 77
</p>
<?php
//77 -----------------------------------------------------------------
// Создать прямоугольную матрицу A, имеющую N строк и M
// столбцов со случайными элементами. Просуммировать
// элементы каждой строки матрицы с соответствующими
// элементами L-й строки.

////Предполагаем, что строку не надо складывать саму с собой
$m=6;
$n=3;
$L = rand(0, ($m - 1));
$matrix;
echo "Номер строки = ".($L + 1)."; Старая матрица:"."<p></p>";
//номер строки, как при счете
for ($i = 0; $i < $m; $i++) 
{
    for ($j = 0; $j < $n; $j++) 
    {
        $matrix[$i][$j] = rand(10, 20);
        echo $matrix[$i][$j]."\t";
    }
    echo "<p></p>";
}

$line_L = $matrix[$L];
for ($i = 0; $i < $m; $i++) 
{
    for ($j = 0; $j < $n; $j++) 
    {
        if ($i != $L)
        {
            $matrix[$i][$j] += $line_L[$j];
        }
//Чтобы все строки просуммировать,
//надо убрать if
    }
}
echo "<p></p>"."Новая матрица:"."<p></p>";
print_matrix($matrix, $m, $n);
?>
<hr>
<p>
	Задание 79
</p>
<?php
//79 -----------------------------------------------------------------
// Создать прямоугольную матрицу A, имеющую N строк и M
// столбцов со случайными элементами. Разделить элементы
// каждого столбца матрицы на элемент этого столбца с
// наибольшим значением
$m=6;
$n=4;
$matrix;
$max_value_in_columns= array();
for ($j = 0; $j < $n; $j++) 
{
    for ($i = 0; $i < $m; $i++) 
    {
        $matrix[$i][$j] = rand(10, 25);
    }
}
echo "<p></p>"."Старая матрица:"."<p></p>";
print_matrix($matrix, $m, $n);
for ($j = 0; $j < $n; $j++) 
{
    $max_value_in_column = -1000000;
    for ($i = 0; $i < $m; $i++) 
    {
        if ($matrix[$i][$j] >= $max_value_in_column)
        {
            $max_value_in_column = $matrix[$i][$j];
        }
    }
    $max_value_in_columns[$j] = $max_value_in_column; 
}
//print_r($max_value_in_columns);
for ($i = 0; $i < $m; $i++)
{
    for ($j = 0; $j < $n; $j++)
    {
        $matrix[$i][$j] /= $max_value_in_columns[$j];
        $matrix[$i][$j] = round($matrix[$i][$j], 2);
    }
}
echo "<p></p>"."Новая матрица:"."<p></p>";
print_matrix($matrix, $m, $n);
?>
