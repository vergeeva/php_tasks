<p>
    41 задание
</p>

<?php
//41 -----------------------------------------------------------------
//Дан одномерный массив числовых значений, насчитывающий N элементов.
//Определить, образуют ли элементы массива, расположенные
//после отрицательного элемента, возрастающую последовательность.
$arr = [1,-6,5,7,9,13];
$length = count($arr);
function find_first_negative($arr)
{
    for ($i = 1; $i < count($arr); $i++)
    {
        if ($arr[$i]<0)
        {
            return $i;
        }
    }
    return -1;
}

function is_growing($arr, $start_index)
{
    for ($i = $start_index + 1; $i < count($arr); $i++)
    {
        if ($arr[$i-1]>$arr[$i])
        {
            return false;
        }
    }
    return true;
}
if (find_first_negative($arr) != -1)
{
    if (is_growing($arr, find_first_negative($arr)))
    {
        echo "образуют возрастающую последовательность";
    }
    else
    {
        echo "не образуют";
    }
}
?>

<hr>
<p>
    42 задание
</p>
<?php
//42 -----------------------------------------------------------------
//Дан одномерный массив числовых значений, насчитывающий N элементов.
//Определить, образуют ли элементы массива, расположенные перед первым
//отрицательным элементом, убывающую последовательность.
$arr = [8,6,4,-7,9,13];
$length = count($arr);

function is_decreasing($arr, $last_index)
{
    for ($i = 1; $i < $last_index; $i++)
    {
        if ($arr[$i]>$arr[$i-1])
        {
            return false;
        }
    }
    return true;
}
if (find_first_negative($arr) != -1)
{
    if (is_decreasing($arr, find_first_negative($arr)))
    {
        echo "образуют убывающую последовательность";
    }
    else
    {
        echo "не образуют";
    }
}
?>
<hr>
<p>
    43 задание
</p>
<?php
//43 -----------------------------------------------------------------
//Дан одномерный массив числовых значений, насчитывающий N элементов.
//Из элементов исходного массива построить два новых. В первый
//должны входить только элементы с положительными значениями,
//а во второй — только элементы с отрицательными значениями.
$arr = [8,-6,4,-7,9,13,-69];
$length = count($arr);
$positive_arr = [];
$negative_arr = [];
for ($i = 0; $i < $length; $i++)
{
    if ($arr[$i]>0)
    {
        array_push($positive_arr, $arr[$i]);
    }
    else
    {
        array_push($negative_arr, $arr[$i]);
    }
}
print_r($positive_arr);
print_r($negative_arr);
// Array
// (
//     [0] => 8
//     [1] => 4
//     [2] => 9
//     [3] => 13
// )
// Array
// (
//     [0] => -6
//     [1] => -7
//     [2] => -69
// )
?>
<hr>
<p>
    44 задание
</p>
<?php
//44 -----------------------------------------------------------------
//Дан одномерный массив числовых значений, насчитывающий N элементов.
//Добавить столько элементов, чтобы элементов с положительными и
//отрицательными значениями стало бы поровну.
$arr = [1,4,-3,4];
$n=4;
$positive=0;
$negative=0;
$f2 =0;
print_r($arr);

for ($i =0; $i<$n;$i++) {
    if ($arr[$i] >= 0) {
        $positive++;
    }
    else $negative++;
}

if ($positive > $negative) {
    $result = $positive-$negative;
    $f1=1;
}
else {
    $f2=1;
    $result = $negative-$positive;
}

for ($i =0; $i<$result;$i++) {
    if ($f1 == 1) { array_push($arr, rand(-10, -1)); }
    if ($f2 == 1) { array_push($arr, rand(1, 10)); }
}
print_r($arr);
?>
<hr>
<p>
    45 задание
</p>
<?php
//45 -----------------------------------------------------------------
//Дан одномерный массив числовых значений, насчитывающий N элементов.
//Добавить к элементам массива такой новый элемент, чтобы сумма элементов
//с положительными значениями стала бы равна модулю суммы элементов
//с отрицательными значениями.
$arr = [1,4,-3,5,-8];
$n=5;
$positivesumm=0;
$negativesumm=0;
print_r($arr);

for ($i =0; $i<$n;$i++) {
    if ($arr[$i] >= 0) {
        $positivesumm = $positivesumm + $arr[$i];
    }
    else
        $negativesumm = $negativesumm + abs($arr[$i]);
}

if ($positivesumm > $negativesumm) {
    $result = $positivesumm-$negativesumm;
}
else {
    $result = $negativesumm-$positivesumm;
}

array_push($arr, $result);
print_r($arr);
?>
<hr>
<p>
    46 задание
</p>
<?php
//46 -----------------------------------------------------------------
//Дан одномерный массив числовых значений, насчитывающий N элементов.
//Дано положительное число T. Разделить это число между положительными
//элементами массива пропорционально значениям этих элементов и добавить
//полученные доли к соответствующим элементам.
$arr = [3,4,-5,1,-8];
$n=5;
$t=9;
$positive=0;
print_r($arr);

for ($i =0; $i<$n;$i++) {
    if ($arr[$i] >= 0) {
        $positive++;
    }
}

$del=$t/$positive;
for ($i =0; $i<$n;$i++) {
    if ($arr[$i] >= 0) {
        $arr[$i] = $arr[$i] + $del;
    }
}
print_r($arr);
?>
<hr>
<p>
    47 задание
</p>
<?php
//47 -----------------------------------------------------------------
//Дан одномерный массив числовых значений, насчитывающий N элементов.
//Исключить из массива элементы, принадлежащие промежутку [B; C].
$B = 2;
$C = 5;
$array= [1, 3, 4, 5, 6, 7, 8, 9, 10];
for ($i = 0; $i<count($array); $i++)
{
    if (($i >= $B) and ($i <= $C))
    {
        unset($array[$i]);
    }
}
print_r($array);
/*   Array
(
   [0] => 1
   [1] => 3
   [6] => 8
   [7] => 9
   [8] => 10
)*/
?>
<hr>
<p>
    48 задание
</p>
<?php
//48 -----------------------------------------------------------------
//Дан одномерный массив числовых значений, насчитывающий N элементов.
//Вместо каждого элемента с нулевым значением поставить
//сумму двух предыдущих элементов массива.
$arr= [1, 3, 0, 5, 6, 7, 0, 9, 0];
$length = count($arr);
//предполагаем, что первый и второй эл. != 0
//Иначе негде взять сумму
for ($i = 2; $i < $length; $i++)
{
    if ($arr[$i] == 0)
    {
        $arr[$i] = $arr[$i-1] + $arr[$i-2];
    }
}
print_r($arr);
// Array
// (
//     [0] => 1
//     [1] => 3
//     [2] => 4
//     [3] => 5
//     [4] => 6
//     [5] => 7
//     [6] => 13
//     [7] => 9
//     [8] => 22
// )
?>
<hr>
<p>
    49 задание
</p>
<?php
//49 -----------------------------------------------------------------
//Дан одномерный массив числовых значений, насчитывающий N элементов.
//Определить, имеются ли в массиве два подряд идущих нуля.
$arr= [1, 3, 0, 0, 6, 7, 0, 9, 0];
$length = count($arr);

function is_have_two_nulls($arr)
{
    for ($i = 1; $i < count($arr); $i++)
    {
        if (($arr[$i] == 0) && ($arr[$i-1] == 0))
        {
            return true;
        }
    }
    return false;
}
if (is_have_two_nulls($arr))
{
    echo "В массиве есть два подряд идущих нуля";
}
else echo "В массиве нет двух подряд идущих нулей";
?>
<hr>
<p>
    50 задание
</p>
<?php
//50 -----------------------------------------------------------------
//Дан одномерный массив числовых значений, насчитывающий N элементов.
//Подсчитать количество чисел, делящихся на 3 нацело, и среднее
//арифметическое чисел с чётными значениями. Поставить полученные
//величины на первое и последнее места в массиве (увеличив массив
//на 2 элемента).
$arr= [1, 2, 3, 122, 5, 18, 6, 9, 4];
$length = count($arr);
$count3 = 0;
$count2 = 0;
$sum = 0;

for ($i = 0; $i < count($arr); $i++)
{
    if ($arr[$i] % 3 == 0) $count3++;
    if ($arr[$i] % 2 == 0)
    {
        $count2++;
        $sum+=$arr[$i];
    }
}
$average = 0;
if ($count2 != 0) $average =  $sum/$count2;
array_unshift($arr, $count3);
array_push($arr, $average);
print_r($arr);
// Array
// (
//     [0] => 4
//     [1] => 1
//     [2] => 2
//     [3] => 3
//     [4] => 122
//     [5] => 5
//     [6] => 18
//     [7] => 6
//     [8] => 9
//     [9] => 4
//     [10] => 30.4
// )
?>
<hr>
<p>
    51 задание
</p>
<?php
//51 -----------------------------------------------------------------
//Заданы M строк символов, которые вводятся с клавиатуры.
//Найти количество символов в самой длинной строке.
//Выровнять строки по самой длинной строке, поставив перед
//каждой строкой соответствующее количество звёздочек.
$arr= ['line', 'something', 'sleep == happier', 'vergeeva'];
$length = count($arr);
$max_line = $arr[0];
for ($i = 1; $i < $length ; $i++)
{
    if (strlen($arr[$i]) > strlen($max_line)) $max_line = $arr[$i];
}
$max_count = strlen($max_line);
echo 'Количество символов в самой длинной строке: '.$max_count.' ';
echo 'эта строка: '.$max_line.' ';
for ($i = 0; $i < $length; $i++)
{
    $difference = $max_count - strlen($arr[$i]);
    $stars = '';
    while ($difference!=0)
    {
        $stars = $stars.'*';
        $difference--;
    }

    $arr[$i] = $stars.$arr[$i];
}
print_r($arr);
// Количество символов в самой длинной строке: 16 эта строка: sleep == happier
//Array
// (
//     [0] => ************line
//     [1] => *******something
//     [2] => sleep == happier
//     [3] => ********vergeeva
// )
?>